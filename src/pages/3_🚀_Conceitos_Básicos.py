import streamlit as st

from topics import data_types

st.set_page_config(page_title="Conceitos B√°sicos", page_icon="üöÄ")

st.markdown(f"# Conceitos B√°sicos")

concepts = st.sidebar.selectbox(
    "Conceitos",
    ["Ol√°, Mundo", "Tipos de dados", "Operadores", "Controlo de Fluxo", "Fun√ß√µes", ""],
)


def hello_world():
    from PIL import Image

    st.markdown(
        """ 
        Como em qualquer outra linguagem de programa√ß√£o, vamos come√ßar pelo famoso 'Hello, world', ou 'Ol√°, mundo'.

        Cria um ficheiro no seu editor de texto prefirido, no meu caso estou a usar o [Pycharm Community Edition](https://www.jetbrains.com/pycharm/download/#section=linux),
        podes chamar o ficheiro de 'hello_world.py' e cole o c√≥digo abaixo.
    """
    )

    st.code(
        """ 
    print('Ol√°, mundo!')
    """,
        language="python",
    )

    st.markdown(
        """ 
    Para executar o c√≥digo no Pycharm vai no bot√£o de play como mostra a imagem abaixo e clica 'Run'
    """
    )

    st.image(Image.open("src/images/run_code.png"))

    st.text("Resultado:")
    st.code(":> Ol√°, mundo!", language="sh")

    st.markdown(
        """
        ### Vamos 'dissecar' o nosso c√≥digo
        
        Na nosso "super-programa" de uma linha de c√≥digo s√≥, temos uma fun√ß√£o, o  **print**.
        **Print** √© uma fun√ß√£o que recebe como argumento um objecto, no nosso caso um texto "Ol√°, mundo!" e impremi-o
        para o utilizador.

        Podemos inclusive passar n√∫meros para a nossa fun√ß√£o **print** ou fazer opera√ß√µes
        artim√©ticas e impremir logo o resultado. Vejamos:\n\n
    """
    )

    st.code(
        """ 
    print(3 + 2)
    """
    )
    st.text("Resultado:")
    st.code(":> 5", language="sh")

    st.markdown("***")

    st.markdown("Pr√≥ximo vamos ver os **Tipos de Dados** em mais detalhes.\n")


def __data_types():
    st.markdown(
        """ 
        Aqui vamos falar sobre os tipos de dados ou **Data Types** b√°sicos no Python.
        Tipos de dados, como o pr√≥prio nome diz, representa to tipo de valor que
        pretendemos guardar ou processar, e cada tipo de dado no Python √© um objeto
        e cada objeto permite-nos fazer um conjunto de opera√ß√µes.

        Cada tipo de dados em Python tem a sua pr√≥pria especificidade e o Python faz
        a gest√£o da mem√≥ria de acordo com o tipo de dados est√°s a criar.
    """
    )

    st.markdown(
        """ 
    Os principais tipos de dados que s√£o j√° parte do Python e que vamos abordar s√£o
    os seguintes:

    Tipos de Dados |
    ---|
    list | 
    set |
    frozenset |
    dict |
    int |
    str |
    """
    )

    data_types.string()


concepts_dic = {
    "Ol√°, Mundo": hello_world,
    "Tipos de dados": __data_types,
}

concepts_dic[concepts]()
